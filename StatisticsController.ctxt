#BlueJ class context
comment0.target=StatisticsController
comment0.text=\n\ The\ functionality\ for\ the\ Statistics\ panel,\ including\ the\ eight\ statistics\ displayed\n\n\ @author\ Siduduziwe\ Mswabuki\ (20075458),\ Boluwatife\ Okusanya\ (20029923),\ Anya\ Kazi\ (20010243),\ Harnit\ Kaur\ Palra\ (20015786)\ \n\ @version\ 06.04.2021\n
comment1.params=url\ rb
comment1.target=void\ initialize(java.net.URL,\ java.util.ResourceBundle)
comment1.text=\n\ Initialise\ all\ variables\n\ @param\ URL\ that\ will\ take\ in\ Statistics.fxml\n\ @param\ ResourceBundle\ that\ will\ take\ in\ rb\n
comment10.params=
comment10.target=java.lang.String\ cheapestandMostExpensiveProperty()
comment10.text=\n\ Finds\ the\ cheapest\ and\ the\ most\ expensive\ property\ within\ the\ user's\ price\ range\n\ @return\ the\ name\ of\ the\ cheapest\ and\ most\ expensive\ property\ within\ the\ user's\ price\ range\n
comment11.params=
comment11.target=java.lang.String\ AverageLowestPropertyPrice()
comment11.text=\n\ Finds\ the\ neighbourhood\ with\ the\ lowest\ average\ property\ price\n\ @return\ the\ neighbourhood\ with\ the\ lowest\ average\ property\ price\n
comment12.params=event
comment12.target=void\ quadrantOne(javafx.event.ActionEvent)
comment12.text=\n\ Sets\ the\ labels\ the\ the\ user\ will\ see\ for\ quadrant\ one\n\ @param\ the\ event\ that\ triggers\ the\ intial\ labels\ to\ be\ set\ for\ this\ quadrant\ \n
comment13.params=event
comment13.target=void\ quadrantTwo(javafx.event.ActionEvent)
comment13.text=\n\ Sets\ the\ labels\ the\ the\ user\ will\ see\ for\ quadrant\ two\n\ @param\ the\ event\ that\ triggers\ the\ intial\ labels\ to\ be\ set\ for\ this\ quadrant\ \n
comment14.params=event
comment14.target=void\ quadrantThree(javafx.event.ActionEvent)
comment14.text=\n\ Sets\ the\ labels\ the\ the\ user\ will\ see\ for\ quadrant\ three\n\ @param\ the\ event\ that\ triggers\ the\ intial\ labels\ to\ be\ set\ for\ this\ quadrant\ \n
comment15.params=event
comment15.target=void\ quadrantFour(javafx.event.ActionEvent)
comment15.text=\n\ Sets\ the\ labels\ the\ the\ user\ will\ see\ for\ quadrant\ four\n\ @param\ the\ event\ that\ triggers\ the\ intial\ labels\ to\ be\ set\ for\ this\ quadrant\ \n
comment16.params=label1\ label2
comment16.target=void\ setLabels(javafx.scene.control.Label,\ javafx.scene.control.Label)
comment16.text=\n\ Sets\ the\ text\ of\ both\ the\ description\ label\ and\ the\ result\ label\n\ @param\ the\ description\ label\ (label1)\ and\ the\ result\ label\ (label2)\n
comment17.params=label1\ label2
comment17.target=void\ initialiselabel(javafx.scene.control.Label,\ javafx.scene.control.Label)
comment17.text=\n\ Initialises\ the\ description\ label\ (label1)\ and\ result\ label\ (label2)\ and\ sets\ the\ visibility\ to\ true\ \n\ @param\ the\ description\ label\ (label1)\ and\ result\ label\ (label2)\n
comment18.params=map\ value
comment18.target=int\ getKey(java.util.HashMap,\ java.lang.String)
comment18.text=\n\ checks\ to\ see\ if\ the\ second\ parameter\ (value)\ is\ equal\ to\ any\ of\ the\ values\ of\ the\ first\ parameter\ (map)\n\ @param\ a\ hashmap\ that\ takes\ in\ an\ integer\ as\ the\ key\ and\ a\ String\ as\ a\ value\n\ @param\ value\ (String)\n\ @return\ i\ if\ the\ value\ equals\ to\ a\ value\ in\ the\ map,\ or\ 0\ if\ not\n
comment2.params=number
comment2.target=java.lang.String\ numberToStatistics(int)
comment2.text=\n\ Switch-Case\ where\ each\ of\ the\ numbers\ (0-7)\ represents\ one\ of\ the\ eight\ statistics\n\ @param\ an\ integer\ that\ will\ determine\ which\ one\ of\ the\ methods\ will\ be\ invoked\n\ @return\ the\ name\ of\ the\ method\ (a\ String)\n
comment3.params=
comment3.target=double\ averageNumberOfReviews()
comment3.text=\n\ Loops\ through\ the\ entire\ data\ set\ and\ counts\ the\ total\ number\ of\ reviews,\ \n\ then\ divides\ the\ reviews\ by\ that\ size\ of\ the\ data\ to\ find\ the\ average\n\ @return\ the\ average\ number\ of\ reviews\ to\ one\ decimal\ place\n
comment4.params=
comment4.target=int\ totalNumberOfAvailableProperties()
comment4.text=\n\ counts\ the\ number\ of\ properties\ that\ are\ available\ (i.e.\ availability365\ must\ not\ be\ 0)\n\ @return\ the\ total\ number\ of\ properties\ that\ are\ available\n
comment5.params=
comment5.target=int\ numberOfHomesOrApartments()
comment5.text=\n\ Counts\ all\ the\ properties\ that\ have\ a\ room\ type\ of\ "Entire\ home/apt"\n\ @return\ the\ number\ of\ properties\ with\ a\ room\ type\ of\ "Entire\ home/apt"\ in\ the\ data\ set\n
comment6.params=
comment6.target=java.lang.String\ mostExpensiveBorough()
comment6.text=\n\ Adds\ up\ all\ property\ prices\ for\ each\ borough\ and\ finds\ the\ borough\ with\ the\ highest\ total\ property\ price\n\ @return\ the\ name\ of\ the\ borough\ with\ the\ highest\ total\ property\ price\n
comment7.params=
comment7.target=java.lang.String\ mostPrestigiousFlats()
comment7.text=\n\ returns\ the\ name\ and\ neighbourhood\ with\ the\ word\ 'prestigious'\ and\ 'flat'\ in\ their\ name\n\ @return\ the\ name\ and\ borough\ of\ the\ properties\ that\ have\ the\ word\ 'flat'\ and\ 'prestigious'\ in\ their\ names\n
comment8.params=param1\ param2
comment8.target=void\ addNeighbourhoodName(java.lang.String,\ java.lang.String)
comment8.text=\n\ Group\ all\ the\ neighbourhoods\ together\n\ @param\ the\ borough\ of\ the\ property\ from\ the\ data\ set\n\ @param\ the\ name\ of\ the\ property\ from\ the\ data\ set\n\ @return\ void\n
comment9.params=
comment9.target=java.lang.String\ hostWithMostReviews()
comment9.text=\n\ Finds\ the\ name\ of\ the\ host\ which,\ when\ all\ their\ reviews\ on\ their\ properties\ are\ combined,\ has\ the\ highest\ total\ number\ of\ reviews\n\ @return\ a\ the\ name\ of\ the\ host\ with\ the\ most\ reviews\ on\ all\ of\ their\ properties\ combined\n
numComments=19
